"use client"

import { useState } from "react"
import { Medal, Trophy, Award, MapPin } from "lucide-react"
import { Card, CardContent } from "@/components/ui/card"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Badge } from "@/components/ui/badge"
import UserBadges from "@/components/user-badges"

type DistancePlayer = {
  id?: number
  user_github: string
  name?: string
  quant_dist: number
  avatar?: string
}

// Frases para os primeiros colocados
const topRankerQuotes = [
  "Enquanto os outros programadores dormiam, voc√™ estava digitando. Vit√≥ria merecida! üèÜ",
  "Voc√™ √© o Usain Bolt da programa√ß√£o! R√°pido nos dedos, lento em levantar da cadeira. ü•á",
  "Parab√©ns! Voc√™ ganhou o pr√™mio de 'Mais Quil√¥metros Virtuais Sem Sair do Lugar'! üéñÔ∏è",
  "Sua cadeira merece um trof√©u por aguentar tanto tempo com voc√™ sentado nela! üëë",
  "Primeiro lugar no ranking, √∫ltimo lugar em exposi√ß√£o solar! Equil√≠brio √© tudo! üåû",
  "Voc√™ √© o campe√£o mundial de maratona sentada! Seus dedos merecem uma massagem! üí™",
  "T√£o produtivo que seu teclado pediu f√©rias! Merecido primeiro lugar! ‚å®Ô∏è",
]

// Frases para segundo e terceiro lugares
const runnerUpQuotes = [
  "Quase l√°! Mais alguns bugs para corrigir e voc√™ chega ao topo! ü•à",
  "Prata virtual! Seu sedentarismo est√° quase no n√≠vel profissional! üèÖ",
  "Segundo/terceiro lugar no ranking, primeiro lugar em consumo de caf√©! ‚òï",
  "Voc√™ est√° no p√≥dio virtual! Sua coluna vertebral n√£o est√° t√£o impressionada... ü¶¥",
  "Medalha de prata/bronze por ignorar consistentemente o alarme para se exercitar! üèÉ‚Äç‚ôÇÔ∏è",
  "T√£o perto do topo! Talvez se voc√™ ignorar mais algumas refei√ß√µes... üçï",
  "Posi√ß√£o honrosa! Seu m√©dico ainda n√£o est√° orgulhoso, mas n√≥s estamos! üë®‚Äç‚öïÔ∏è",
]

// Frases para posi√ß√µes intermedi√°rias (4-10)
const midRankerQuotes = [
  "Voc√™ est√° no meio do pelot√£o! Nem o mais sedent√°rio, nem o mais ativo. Perfeitamente equilibrado! üßò‚Äç‚ôÇÔ∏è",
  "Posi√ß√£o m√©dia, habilidades de programa√ß√£o acima da m√©dia! Prioridades! üíª",
  "Voc√™ est√° subindo no ranking! Sua cadeira est√° afundando na mesma propor√ß√£o! ü™ë",
  "Nem t√£o r√°pido, nem t√£o devagar. Como um bom algoritmo de ordena√ß√£o! üîÑ",
  "Voc√™ est√° no caminho certo! O caminho para a fisioterapia tamb√©m, mas isso √© outro assunto... ü©∫",
  "Posi√ß√£o decente! Sua produtividade e sua postura est√£o inversamente proporcionais! üìä",
  "Voc√™ est√° no meio termo! Como seu caf√©: nem muito quente, nem muito frio! ‚òï",
]

// Frases para posi√ß√µes mais baixas (>10)
const lowerRankerQuotes = [
  "Ei, pelo menos voc√™ est√° no ranking! Isso √© mais do que seu plano de exerc√≠cios pode dizer! üèãÔ∏è‚Äç‚ôÇÔ∏è",
  "Posi√ß√£o humilde, mas seu potencial de sedentarismo √© promissor! üìà",
  "Voc√™ est√° come√ßando sua jornada virtual! Sua jornada real para a geladeira j√° √© expert! üçî",
  "Ainda h√° muito espa√ßo para crescer! Tanto no ranking quanto na sua cadeira! ü™ë",
  "N√£o desanime! Com mais algumas noites viradas codando, voc√™ sobe no ranking! üåô",
  "Voc√™ est√° construindo sua reputa√ß√£o virtual! Sua reputa√ß√£o com o personal trainer est√° em ru√≠nas! üèÉ‚Äç‚ôÇÔ∏è",
  "Posi√ß√£o modesta, mas seu hist√≥rico de navega√ß√£o no Stack Overflow √© impressionante! üîç",
]

// Frases gerais que podem ser usadas para qualquer posi√ß√£o
const generalRankerQuotes = [
  "Cada linha de c√≥digo √© um passo que voc√™ n√£o deu no mundo real! üö∂‚Äç‚ôÇÔ∏è",
  "Sua posi√ß√£o no ranking √© diretamente proporcional ao tempo que voc√™ n√£o passa ao ar livre! üå≥",
  "Parab√©ns! Seu m√©dico acabou de comprar um iate com o dinheiro das suas futuras consultas! üë®‚Äç‚öïÔ∏è",
  "Sua cadeira conhece melhor o formato do seu corpo do que seu parceiro(a)! üí∫",
  "Voc√™ est√° no ranking! Seu contador de passos no celular est√° com ci√∫mes! üì±",
  "Sua posi√ß√£o mostra dedica√ß√£o! Ao c√≥digo, n√£o √† sua sa√∫de! üíâ",
  "Impressionante! Seu avatar virtual percorre mais dist√¢ncia que voc√™ na vida real! üéÆ",
]

export default function DistanceRankingCard({ player, index }: { player: DistancePlayer; index: number }) {
  // Selecionar uma frase aleat√≥ria com base na posi√ß√£o
  let quotePool: string[] = []

  if (index === 0) {
    quotePool = topRankerQuotes
  } else if (index === 1 || index === 2) {
    quotePool = runnerUpQuotes
  } else if (index >= 3 && index <= 9) {
    quotePool = midRankerQuotes
  } else {
    quotePool = lowerRankerQuotes
  }

  // Adicionar frases gerais ao pool para aumentar a variedade
  quotePool = [...quotePool, ...generalRankerQuotes]

  // Selecionar uma frase aleat√≥ria do pool
  const randomIndex = Math.floor(Math.random() * quotePool.length)
  const initialQuote = quotePool[randomIndex] || ""

  const [randomQuote] = useState(initialQuote)

  // Verificar se player existe antes de continuar
  if (!player) {
    return <div>Dados do jogador n√£o dispon√≠veis</div>
  }

  // Usar o nome do Github como nome de exibi√ß√£o se name n√£o estiver dispon√≠vel
  const displayName = player.name || player.user_github || "Usu√°rio An√¥nimo"
  
  // Extrair as iniciais para o fallback do avatar
  const initials = displayName.substring(0, 2).toUpperCase()

  return (
    <Card
      className={`overflow-hidden transition-all ${
        index < 3
          ? `border-2 ${
              index === 0
                ? "border-yellow-500 shadow-[0_0_15px_rgba(234,179,8,0.5)]"
                : index === 1
                ? "border-slate-400 shadow-[0_0_15px_rgba(148,163,184,0.5)]"
                : "border-amber-700 shadow-[0_0_15px_rgba(180,83,9,0.5)]"
            }`
          : "hover:shadow-md"
      }`}
    >
      <CardContent className="p-0">
        <div className="flex items-center p-4">
          <div className="flex items-center justify-center w-10 mr-4 font-bold text-lg">
            {index === 0 ? (
              <Trophy className="h-8 w-8 text-yellow-500" />
            ) : index === 1 ? (
              <Trophy className="h-7 w-7 text-slate-400" />
            ) : index === 2 ? (
              <Trophy className="h-6 w-6 text-amber-700" />
            ) : (
              <span className="text-muted-foreground">{index + 1}</span>
            )}
          </div>

          <Avatar className="h-10 w-10 mr-4">
            <AvatarImage src={player.avatar || "/placeholder.svg"} alt={player.name || "Usu√°rio"} />
            <AvatarFallback>{initials}</AvatarFallback>
          </Avatar>

          <div className="flex-1">
            <div className="font-medium">{displayName}</div>
            <div className="mt-1">
              <UserBadges userDistance={player.quant_dist} showOnlyLast={true} />
            </div>
          </div>

          <div className="ml-auto flex flex-col items-end">
            <span className="font-medium text-foreground">{player.quant_dist.toFixed(1)}</span>
            <span className="text-xs uppercase font-semibold text-slate-500">km</span>
          </div>
        </div>

        {/* Frase exibida apenas para os 3 primeiros colocados */}
        {index < 3 && (
          <div className="px-4 pb-3 pt-0">
            <p className="text-xs text-muted-foreground">{randomQuote}</p>
          </div>
        )}
      </CardContent>
    </Card>
  )
}
